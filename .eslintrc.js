module.exports = {
  parser: '@typescript-eslint/parser',
  plugins: ['@typescript-eslint'],
  parserOptions: {
    ecmaVersion: 2018,
    sourceType: 'module',
    ecmaFeatures: {
      jsx: true,
    },
    project: './tsconfig.json',
  },
  settings: {
    react: {
      version: 'detect',
    },
  },
  extends: [
    'plugin:react/recommended',
    'eslint:recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:react-hooks/recommended', // Enforces react hooks rules
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'prettier',
    'eslint-config-prettier',
    'plugin:storybook/recommended',
  ],
  rules: {
    '@typescript-eslint/member-ordering': [
      'error',
      {
        default: ['static-field', 'instance-field', 'constructor', 'static-method', 'instance-method'],
      },
    ],
    // '@typescript-eslint/no-parameter-properties: [warn, { 'allows: ['public', 'private', 'protected'] }],
    'max-len': ['error', { code: 200, comments: 1000, tabWidth: 2 }],
    'react/jsx-key': 2,
    'react/jsx-max-props-per-line': [1, { maximum: 1, when: 'always' }],
    indent: ['warn', 4, { SwitchCase: 1 }],
    '@typescript-eslint/no-unused-vars': 'warn',
    '@typescript-eslint/explicit-member-accessibility': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-unsafe-argument': 'off',
    '@typescript-eslint/no-unsafe-return': 'off',
    '@typescript-eslint/no-unsafe-member-access': 'off',
    '@typescript-eslint/no-unsafe-call': 'off',
    '@typescript-eslint/no-unsafe-assignment': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/restrict-template-expressions': 'off',
    '@typescript-eslint/restrict-plus-operands': 'off',
    '@typescript-eslint/no-floating-promises': 'off',
    '@typescript-eslint/ban-types': [
      'error',
      {
        types: {
          Object: 'Use Record<string, unknown> or Record<string, any>.',
        },
      },
    ],
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/no-empty-function': 'off',
    '@typescript-eslint/unbound-method': 'off',
    '@typescript-eslint/array-type': 'off',
    '@typescript-eslint/no-shadow': 'error',
    'spaced-comment': ['warn', 'always'],
    'guard-for-in': 'error',
    'no-labels': 'error',
    'no-caller': 'error',
    'no-bitwise': 'error',
    'no-console': ['warn', { allow: ['warn', 'error'] }],
    'no-new-wrappers': 'error',
    'no-eval': 'error',
    'no-new': 'error',
    'no-var': 'error',
    radix: 'error',
    eqeqeq: ['error', 'always', { null: 'ignore' }],
    'prefer-const': 'error',
    'object-shorthand': ['error', 'always', { avoidExplicitReturnArrows: true }],
    'default-case': 'error',
    complexity: ['error', 40],
    'no-invalid-this': 'off',
    'react/prop-types': 'off',
    'react/display-name': 'off',
    'react-hooks/rules-of-hooks': 'error',
    'react-hooks/exhaustive-deps': 'warn',
  },
};
